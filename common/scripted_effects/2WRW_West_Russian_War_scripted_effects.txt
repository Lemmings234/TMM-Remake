### USEFUL TAGS ###
# START WAR
# TENSION EFFECTS
# RUSSIAN EXHAUSTION EFFECTS
# GERMAN EXHAUSTION EFFECTS
# PEACE DEALS

##############################################
#######			  ZA RODINU!		   #######
##############################################


## START WAR ##

2WRW_initiate = {
	BNW_allow_pakt_renamings = yes
	set_global_flag = RUS_2WRW
	set_country_flag = RUS_2WRW_ongoing
	set_country_flag = {
		flag = RUS_2WRW_peace_blocker
		days = 60
		value = 1
	}
	
	GER = {
		set_country_flag = RUS_2WRW_ongoing
		set_country_flag = {
			flag = RUS_2WRW_peace_blocker
			days = 60
			value = 1
		}
	}
	
	## REMOVE EINHEITSPAKT MEMBERS ##
	every_country = {
		limit = {
			tag = NOR
			is_in_faction_with = GER 
			NOT = { 
			    has_government = national_socialism 
			}	
		}
		GER = { 
			remove_from_faction = NOR
			set_autonomy = {
				target = NOR
				autonomy_state = autonomy_free
			}
		}
		RUS = {
			country_event = { id = crisis2wrw.1 days = 30 random_days = 15 }
		}
	}
    
	every_country = {
		limit = {
			tag = ENG
			is_in_faction_with = GER
		}
		GER = { 
			remove_from_faction = ENG
			country_event = { id = crisis2wrw.12 days = 150 random_days = 15 }
		}
	}
	
	every_country = {
		limit = {
			tag = ROM
			is_in_faction_with = GER
		}
		GER = { 
			remove_from_faction = ROM
			set_autonomy = {
				target = NOR
				autonomy_state = autonomy_free
			}
		}
		RUS = {
			country_event = { id = crisis2wrw.23 days = 110 random_days = 15 }
		}
	}
	
	every_country = {
		limit = {
			tag = HUN
			is_in_faction_with = GER
		}
		GER = { 
			remove_from_faction = HUN
			set_autonomy = {
				target = HUN
				autonomy_state = autonomy_free
			}
		}
		RUS = {
			country_event = { id = hungary_crisis.1 days = 75 random_days = 15 }
		}
	}

	every_country = {
		limit = {
			tag = FIN
			is_in_faction_with = GER 
		}
		GER = { 
			remove_from_faction = FIN
			set_autonomy = {
				target = FIN
				autonomy_state = autonomy_free
			}
		}
	}
	
	## set up events ##
	
	USA = { country_event = { id = dec2wrw.31 days = 40 random_days = 40 } } # Red cross event
	
	## war declarations
	
	declare_war_on = {
		target = GER
		type = annex_everything
	}
	declare_war_on = {
		target = MCW
		type = annex_everything
	}
	declare_war_on = {
		target = MOS
		type = annex_everything
	}
	declare_war_on = {
		target = UKR
		type = annex_everything
	}
	declare_war_on = {
		target = OST
		type = annex_everything
	}
	declare_war_on = {
		target = CAU
		type = annex_everything
	}
	declare_war_on = {
		target = GGN
		type = annex_everything
	}
	declare_war_on = {
		target = BLR
		type = annex_everything
	}
	declare_war_on = {
		target = POL
		type = annex_everything
	}
	
	## setting up variables and modifiers
	
	add_to_array = { WRW_majors = ROOT }
	add_to_array = { WRW_majors = GER }

	set_variable = { RUS_tension_bar_frame = 1 }
	set_variable = { nuclear_console_frame = 1 }
	set_variable = { select_fire_buttons_frame = 1 }
	set_variable = { RUS_casualty_tracker = 50 }
	
	GER = {
		set_variable = { RUS_tension_bar_frame = 1 }
		set_variable = { nuclear_console_frame = 1 }
		set_variable = { select_fire_buttons_frame = 1 }
		set_variable = { GER_casualty_tracker = 50 }
	}
	
	ROOT = {
		add_dynamic_modifier = { modifier = RUS_war_exhaustion	} 
		add_dynamic_modifier = { modifier = WRW_tension	} 
	}
	GER = {
		add_dynamic_modifier = { modifier = GER_war_exhaustion } 
		add_dynamic_modifier = { modifier = WRW_tension	} 
	}
	
	OST = {	add_ideas = WRW_integrated_administration }
	BLR = {	add_ideas = WRW_integrated_administration }
	UKR = {	add_ideas = WRW_integrated_administration }
	MCW = {	add_ideas = WRW_integrated_administration }
	MOS = {	add_ideas = WRW_integrated_administration }
	PAU = {	add_ideas = WRW_integrated_administration }
	CAU = {	add_ideas = WRW_integrated_administration }
	
	
	NPL = {	add_ideas = RUS_not_our_war }
	KAZ = {	add_ideas = RUS_not_our_war }
	IRC = {	add_ideas = RUS_not_our_war }
	
	every_state = { ## adds prepared defenses modifier to every state in Moskowien
		limit = {
			is_core_of = MCW
		}
		add_province_modifier = {
			static_modifiers = { MCW_prepared_defense }
			province = { all_provinces = yes }
		}
	}

	if = {
		limit = {
			FIN = {
				is_in_faction_with = GER
			}
		}
		set_global_flag = FINLAND_2WRW
	}
}

### Tension and Exhaustion clamps ###

2WRW_exhaustion_clamp = {
	clamp_variable = {
		var = WRW_war_exhaustion_100
		min = -100
		max = 0
	}
	clamp_variable = {
		var = WRW_war_exhaustion_50
		min = -50
		max = 0
	}
	clamp_variable = {
		var = WRW_war_exhaustion_25
		min = -25
		max = 0
	}
	clamp_variable = {
		var = WRW_war_exhaustion
		min = 0
		max = 100
	}
}

2WRW_tension_clamp ={

	clamp_variable = {
		var = WRW_tension_var
		min = 0
		max = 100
	}
	
	clamp_variable = {
		var = WRW_tension_20
		min = 0
		max = 20
	}
	
	clamp_variable = { # this one's supposed to be negative
		var = WRW_tension_25
		min = -25
		max = 0
	}
	
	clamp_variable = {
		var = WRW_tension_40
		min = 0
		max = 40
	}
	
	## setting the tension bar's color ##
	
	if = {
		limit = {
			check_variable = { WRW_tension_var > 20 }
			check_variable = { WRW_tension_var < 40 }
		}
		set_variable = { RUS_tension_bar_frame = 2 }
	}
	else_if = {
		limit = {
			check_variable = { WRW_tension_var > 40 }
			check_variable = { WRW_tension_var < 60 }
		}
		set_variable = { RUS_tension_bar_frame = 3 }
	}
	else_if = {
		limit = {
			check_variable = { WRW_tension_var > 60 }
			check_variable = { WRW_tension_var < 80 }
		}
		set_variable = { RUS_tension_bar_frame = 4 }
	}
	else_if = {
		limit = {
			check_variable = { WRW_tension_var > 80 }
		}
		set_variable = { RUS_tension_bar_frame = 5 }
	}
	if = {
		limit = {
			check_variable = { WRW_tension_var > 99 }
		}
		set_variable = { nuclear_console_frame = 2 }
	}
}

### Tension effects ###

WRW_add_tension = { # adds/removes tension

	## applying any modifiers 
	
	for_each_scope_loop = { # to synch tension for both majors
		array = WRW_majors
		break = break
	
		## setting up variables

		set_temp_variable = { temp_20 = temp_tension } # modifier that will be at 20% at 100 tension
		set_temp_variable = { temp_25 = temp_tension } # modifier that will be at 25% at 100 tension
		set_temp_variable = { temp_40 = temp_tension } # modifier that will be at 40% at 100 tension
		
		divide_temp_variable = { temp_20 = 500 } # dividing variables to achieve their proper final forms
		divide_temp_variable = { temp_25 = 400 }
		divide_temp_variable = { temp_40 = 250 }
		
		add_to_variable = { WRW_tension_20 = temp_20 } 
		subtract_from_variable = { WRW_tension_25 = temp_25 } # this one is a negative value
		add_to_variable = { WRW_tension_40 = temp_40 }
		add_to_variable = { WRW_tension_var = temp_tension } # setting tension for display purposes
		2WRW_tension_clamp = yes # clamps variables
		
		force_update_dynamic_modifier = yes
		
		if = { # makes sure we don't have infinite tension increases
			limit = {
				check_variable = { i > 0 }
			}
			set_temp_variable = { break = 1 }
		}
	}
	
	# auto generated tooltips
	
	if = { # checks for positive tension
		limit = {
			check_variable = { temp_tension > 0 }
		}
		custom_effect_tooltip = WRW_tension_increase_tt
	}
	else = { # checks for negative tension
		multiply_temp_variable = { temp_tension = -1 }
		custom_effect_tooltip = WRW_tension_decrease_tt
	}
}

WRW_add_war_exhaustion = { # adds/removes war exhaustion

	#applies modifier
	
	set_temp_variable = { temp_100 = temp_exhaustion } # modifier that will be 100% at 100 war exhaustion
	set_temp_variable = { temp_50 = temp_exhaustion } # modifier that will be 50% at 100 war exhaustion
	set_temp_variable = { temp_25 = temp_exhaustion } # modifier that will be 25% at 100 war exhaustion
	
	divide_temp_variable = { temp_100 = 100 } # divides modifiers so they work properly
	divide_temp_variable = { temp_50 = 200 }
	divide_temp_variable = { temp_25 = 400 }
	
	subtract_from_variable = { WRW_war_exhaustion_100 = temp_100 } # adds properly modified numbers for the dynamic modifier
	subtract_from_variable = { WRW_war_exhaustion_50 = temp_50 }
	subtract_from_variable = {  WRW_war_exhaustion_25 = temp_25 }
	
	add_to_variable = { WRW_war_exhaustion = temp_exhaustion }
	
	if = {
		limit = {
			check_variable = { temp_exhaustion > 0 }
		}
		custom_effect_tooltip = WRW_war_exhaustion_increase_tt
	}
	else = {
		custom_effect_tooltip = WRW_war_exhaustion_decrease_tt
	}
	
	2WRW_exhaustion_clamp = yes # clamps variables
}

## Peace pulse

WRW_update_peace_acceptance = {
	for_each_scope_loop = { # to update for both nations
		array = WRW_majors
		break = break
		
		set_temp_variable = { base_peace_acceptance = WRW_war_exhaustion }
		set_temp_variable = { base_peace_reluctance = WRW_tension_var }
		if = {
			limit = {
				check_variable = { WRW_peace_acceptance_modifier > 1 }
			}
			divide_temp_variable = { base_peace_reluctance = peace_acceptance_modifier }
		}
		else = {
			divide_temp_variable = { base_peace_reluctance = 1.5 }
		}
		subtract_from_temp_variable = { base_peace_acceptance = base_peace_reluctance }
		add_to_temp_variable = { base_peace_acceptance = WRW_peace_acceptance_modifier }
		set_variable = { WRW_peace_accceptance = base_peace_acceptance }
		
		if = {
			limit = {
				check_variable = { i > 0 }
			}
			set_temp_variable = { break = 1 }
		}
	}
}

### Peace deals

RUS_lost_war = {
	RUS_peace_out = yes
	GER = { 
		if = {
			limit = {
				has_country_leader = {
					character = GER_albert_speer
					ruling_only = yes
				}
			}
			country_event = { id = reich.2005 days = 1 }
		}
		clr_country_flag = RUS_2WRW_ongoing
	}
	every_country = {
		news_event = { id = WORLD.40002 days = 2 }
	}	
	
	MCW = {
		transfer_state = 214
		transfer_state = 859
		transfer_state = 858
		transfer_state = 861
		transfer_state = 860
		transfer_state = 857
		transfer_state = 351
		transfer_state = 856
		transfer_state = 252
		transfer_state = 855
		transfer_state = 256
		transfer_state = 862
		transfer_state = 262
		transfer_state = 863
		transfer_state = 870
		transfer_state = 869
		transfer_state = 868
		transfer_state = 397
		transfer_state = 866
		transfer_state = 398
		transfer_state = 867
		transfer_state = 400
		transfer_state = 752
		transfer_state = 865
		transfer_state = 399
		transfer_state = 854
		transfer_state = 249
		transfer_state = 753
		transfer_state = 864
		transfer_state = 651
		transfer_state = 853
		transfer_state = 250
		transfer_state = 851
		transfer_state = 850
		transfer_state = 251
		transfer_state = 755
		transfer_state = 852
		transfer_state = 849
		transfer_state = 652
		transfer_state = 407
		transfer_state = 406
		transfer_state = 1887
		
		every_state = {
			limit = { is_owned_by = MCW } 
			add_core_of = MCW
		}
		854 = {
		    set_state_name = "Joschkar-Ola"
		}
		857 = {
		    set_state_name = "Wologda"
		}
		351 = {
		    set_state_name = "Manturowo"
		}
		867 = {
		    set_state_name = "Scharja"
		}
		855 = {
		    set_state_name = "Semjonow"
		}
		252 = {
		    set_state_name = "Nischni Nowgorod"
		}
		256 = {
		    set_state_name = "Tscheboksary"
		}
		250 = {
		    set_state_name = "Sysran"
		}
		249 = {
		    set_state_name = "Kasan"
		}
		400 = {
		    set_state_name = "Wjatka"
		}
		651 = {
		    set_state_name = "Nabereschnyje Tschelny"
		}
		397 = {
		    set_state_name = "Syktywkar"
		}
		214 = {
		    set_state_name = "Archangelsk"
		}
		858 = {
		    set_state_name = "Wytegra"
		}
		755 = {
		    set_state_name = "Balakowo"
		}
		860 = {
		    set_state_name = "Weliki Ustjug"
		}
		861 = {
		    set_state_name = "Plessezk"
		}
		862 = {
		    set_state_name = "Nesen"
		}
		863 = {
		    set_state_name = "Workuta"
		}
		869 = {
		    set_state_name = "Uchta"
		}
		398 = {
		    set_state_name = "Uchta"
		}
		262 = {
		    set_state_name = "Narjan-Mar"
		}
		852 = {
		    set_state_name = "Alexejewka"
		}
		853 = {
		    set_state_name = "Ufa"
		}
		864 = {
		    set_state_name = "Saigatka"
		}
		865 = {
		    set_state_name = "Yurlinsky"
		}
        set_province_name = { id = 9402 name = "Joschkar-Ola" }
        set_province_name = { id = 6338 name = "Kasan" }
        set_province_name = { id = 9259 name = "Nowotscheboksarsk" }  		
        set_province_name = { id = 9131 name = "Wologda" }  		
        set_province_name = { id = 6124 name = "Wjatka" }  		
        set_province_name = { id = 9385 name = "Nabereschnyje Tschelny" }  		
        set_province_name = { id = 11375 name = "Nischni Nowgorod" }  		
        set_province_name = { id = 6327 name = "Kstowo" }  		
        set_province_name = { id = 3282 name = "Tscheboksary" }	
		set_province_name = { id = 6121 name = "Syktywkar" }
		set_province_name = { id = 6502 name = "Balakowo" }
		set_province_name = { id = 6226 name = "Sysran" }
		set_province_name = { id = 12527 name = "Beresniki" }
		set_province_name = { id = 270 name = "Semjonow" }
		set_province_name = { id = 6077 name = "Galitsch" }
		set_province_name = { id = 3315 name = "Wolschsk" }
		set_province_name = { id = 11075 name = "Manturowo" }
		set_province_name = { id = 9159 name = "Kineschma" }
		set_province_name = { id = 73 name = "Scharja" }
		set_province_name = { id = 11107 name = "Grjasowez" }
		set_province_name = { id = 11189 name = "Scheksna" }
		set_province_name = { id = 166 name = "Wytegra" }
		set_province_name = { id = 3338 name = "Archangelsk" }
		set_province_name = { id = 9124 name = "Weliki Ustjug" }
		set_province_name = { id = 9349 name = "Naryschewo" }
		set_province_name = { id = 112 name = "Schachunja" }
		set_province_name = { id = 9146 name = "Slobodskoi" }
		set_province_name = { id = 13344 name = "Wytschegodski" }
		set_province_name = { id = 11074 name = "Welsk" }
		set_province_name = { id = 72 name = "Njandoma" }
		set_province_name = { id = 9130 name = "Plessezk " }
		set_province_name = { id = 9293 name = "Glasow" }
		set_province_name = { id = 1295 name = "Uchta" }
		set_province_name = { id = 3168 name = "Sewerodwinsk" }
		set_province_name = { id = 6192 name = "Mesen" }
		set_province_name = { id = 105 name = "Narjan-Mar" }
		set_province_name = { id = 10723 name = "Petschora" }
		set_province_name = { id = 9205 name = "Ussinsk" }
		set_province_name = { id = 13357 name = "Workuta" }
		set_province_name = { id = 12130 name = "Ascha" }
		set_province_name = { id = 6278 name = "Ischewsk" }
		set_province_name = { id = 6323 name = "Jelabuga" }
		set_province_name = { id = 9299 name = "Stawropol-Wolschskij" }
		set_province_name = { id = 312 name = "Nowodwinsk" }
		set_province_name = { id = 464 name = "Gurjew" }
		set_province_name = { id = 9420 name = "Alexejewka" } 
		set_province_name = { id = 9391 name = "Iwaschtschenkowo" }
		set_province_name = { id = 7403 name = "Tschaikowski" }
		set_province_name = { id = 11228 name = "Lyswa" }
		set_province_name = { id = 11228 name = "Lyswa" }
		set_province_name = { id = 9243 name = "Nowosamarowsk" }
		set_province_name = { id = 6275 name = "Schiguljowsk" }
		if = {
			limit = {
				has_global_flag = german_civil_war_bormannvic
			}
			set_cosmetic_tag = MCW_bormann
			set_popularities = {
				paternalism = 15
				fascism = 30
				national_socialism = 55
			}
		}
		else_if = {
			limit = {
				has_global_flag = german_civil_war_speervic
			}
			set_cosmetic_tag = MCW_speer
			set_popularities = {
				paternalism = 15
				fascism = 30
				national_socialism = 55
			}
		}
	}    
	
	FIN = {
		transfer_state = 1359
		transfer_state = 213
		transfer_state = 215
		transfer_state = 146
		transfer_state = 1712
		transfer_state = 1724
		transfer_state = 216
		transfer_state = 722
		transfer_state = 147
	}
	RUS = {
		clr_country_flag = RUS_2WRW_ongoing
	}
}